#!/bin/bash

# Create the Docker image for the tcp-angular service.
# All actions are local to the VM; does not use aws or ecs-cli.
# Should be run before deploy-to-ecs is run.
# Assumes the directory for the service exists in this directory,
# its name matches "*-ecs", and it is the only directory that matches.

# Fail on any error; unset variables are errors; show commands before executing:
set -eux
PROJECT="$1"
ENV="$2"
aws_region="$3"

ECS_DIR=$(find . -maxdepth 1 -type d -name "*-ecs")

# TODO: see if logging anything from this script would be helpful

# TODO: make sure we're in the correct (root) directory
# Can just check for Dockerfile, and cd .. if not there

date

echo "Running in $PWD"
echo "Project = $PROJECT"
echo "Target Environment = $ENV"

docker --version

# Find out what the external FQDN of the Application Load Balancer (ALB) is;
# change the domain line in ../src/environments/environment.prod.ts to
# use that instead of localhost; e.g.:
# const domain = 'tcp-testing-3-dev-cluster-alb-877192071.us-east-1.elb.amazonaws.com:8080'

alb=$(aws ssm get-parameter --region $aws_region --name "/$PROJECT/$ENV/alb/endpoint" --query "Parameter.Value" --out text)
echo "ALB FQDN is $alb"

# relative to project root:
for envfile in src/environments/environment.ts src/environments/environment.prod.ts ; do
    mv $envfile $envfile.orig
    # The const domain setting can span multiple lines, so we have to do this song and dance:
    touch $envfile
    echo -e "// Generated by deploy-to-ecs $(date)\n" >> $envfile
    # Replace everything between the BEGIN and END lines (inclusive) with const domain=...:
    sed -e "/BEGIN DOMAIN DEF/,/END DOMAIN DEF/cconst domain = '$alb:8080'" $envfile.orig >> $envfile

    echo "Original $envfile:"
    cat $envfile.orig

    echo -e "\nModified $envfile:"
    cat $envfile
done;

echo

echo "Generating .env file for ECS deployment..."
cp -p .env $ECS_DIR/ ||:
# Note: do NOT use double-quotes around the values; bash isn't interpreting .env: ecs-cli compose is, and it does not drop quotes.
cat >> $ECS_DIR/.env <<EOF
AWS_REGION=${aws_region}
EOF

echo ".env file for ECS deployment:"
cat $ECS_DIR/.env
echo "--------"

echo

echo "Building the Docker image...."
npm run docker:build

echo "Checking for the Docker image..."
docker image ls | grep tcp-angular

date
